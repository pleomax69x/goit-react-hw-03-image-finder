{"version":3,"sources":["components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","components/Modal.jsx","components/Button.jsx","components/Loader.jsx","services/fetchImgApi.js","App.js","index.js"],"names":["Searchbar","state","search","handleChange","e","value","currentTarget","setState","handleSubmit","evt","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","webformatURL","tags","togleModal","largeImageURL","onClick","src","alt","ImageGallery","items","map","item","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","img","Button","buttonUpdate","LoaderDB","spiner","color","height","width","visible","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImgApi","searchWord","page","get","q","propTypes","PropTypes","string","isRequired","number","App","showModal","pics","largeUrl","url","formSubmitHandler","data","fetchImage","options","then","res","prevState","hits","catch","error","console","log","finally","prevProps","pageYOffset","snapshot","scrollTo","top","innerHeight","behavior","showButton","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.796e0b2c.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    this.setState({ search: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.search);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      search: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"search\"\r\n            value={this.state.search}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  tags,\r\n  togleModal,\r\n  largeImageURL,\r\n}) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => togleModal(largeImageURL)}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  togleModal: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ items, togleModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {items.map((item) => (\r\n        <ImageGalleryItem key={item.id} {...item} togleModal={togleModal} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  togleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.img} alt=\"\" />\r\n          {/* {this.props.children} */}\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ buttonUpdate }) => {\r\n  return (\r\n    <button type=\"submit\" className=\"Button\" onClick={buttonUpdate}>\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  buttonUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoaderDB = ({ spiner }) => {\r\n  return (\r\n    <Loader\r\n      type=\"Rings\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      visible={spiner}\r\n      //   timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\n\r\nLoaderDB.propTypes = {\r\n  spiner: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default LoaderDB;\r\n","import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst apiKey = \"18836108-b754cab046c957f0572c5e4ce\";\r\nconst BASE_URL = \"https://pixabay.com/api\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\naxios.defaults.params = {\r\n  key: apiKey,\r\n  image_type: \"photo\",\r\n  orientation: \"horizontal\",\r\n  per_page: 12,\r\n};\r\n\r\n// const fetchImgApi = ({ searchWord = \"\", page = 1 }) => {\r\n//   return axios.get(\r\n//     `https://pixabay.com/api/?q=${searchWord}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\r\n//   );\r\n// };\r\n\r\nconst fetchImgApi = ({ searchWord = \"\", page = 1 }) => {\r\n  return axios.get(\"\", {\r\n    params: { q: searchWord, page },\r\n  });\r\n};\r\n\r\nfetchImgApi.propTypes = {\r\n  searchWord: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchImgApi;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal\";\nimport Button from \"./components/Button\";\nimport LoaderDB from \"./components/Loader\";\nimport fetchImgApi from \"./services/fetchImgApi\";\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    searchWord: \"\",\n    pics: [],\n    page: 1,\n    largeUrl: \"\",\n    spiner: false,\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    if (prevState.page === 1) return null;\n    if (prevState.page < this.state.page) {\n      return window.pageYOffset;\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.searchWord !== this.state.searchWord) {\n      this.fetchImage();\n    }\n\n    if (snapshot !== null) {\n      window.scrollTo({\n        top: snapshot + window.innerHeight - 130,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  togleModal = (url) => {\n    this.setState({\n      showModal: !this.state.showModal,\n      largeUrl: url,\n    });\n  };\n\n  formSubmitHandler = (data) => {\n    this.setState({\n      searchWord: data,\n      page: 1,\n      pics: [],\n    });\n  };\n\n  fetchImage = () => {\n    const { page, searchWord } = this.state;\n    const options = { searchWord, page };\n\n    this.setState({ spiner: true });\n\n    fetchImgApi(options)\n      .then((res) => {\n        this.setState((prevState) => ({\n          pics: [...prevState.pics, ...res.data.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => console.log(error))\n      .finally(() => this.setState({ spiner: false }));\n  };\n\n  render() {\n    const { showModal, largeUrl, pics, spiner } = this.state;\n    const showButton = pics.length % 12 === 0 && pics.length > 0;\n\n    return (\n      <>\n        {showModal && <Modal onClose={this.togleModal} img={largeUrl} />}\n\n        <Searchbar onSubmit={this.formSubmitHandler} />\n\n        <ImageGallery items={pics} togleModal={this.togleModal} />\n\n        <div className=\"center\">\n          {spiner ? (\n            <LoaderDB spiner={spiner} />\n          ) : (\n            showButton && <Button buttonUpdate={this.fetchImage} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}